// schema.prisma (potongan inti)

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UoM {
  PCS
  METER
  KG
  ROLL
  PACK
}

enum WorkOrderStatus {
  PLANNED
  IN_PROGRESS
  DONE
  CANCELED
}

enum PreOrderStatus {
  DRAFT
  CONFIRMED
  PARTIALLY_FULFILLED
  FULFILLED
  CANCELED
}

enum PreOrderChannel {
  ONLINE
  OFFLINE
  MARKETPLACE
  OTHER
}

enum ShipOption {
  PICKUP
  COURIER
  JNE
  JNT
  SICEPAT
  GOJEK
  GRAB
  POS
  LALAMOVE
  BARAKA
  OTHER
}

enum ProgressStage {
  CUTTING
  BRANDING
  SEWING
  REWORK
  REJECT
}

enum ProgressCategory {
  LINE_IN_HOUSE
  BORONGAN_IN_HOUSE
  BORONGAN_OUT_HOUSE
  CMT_VENDOR
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String // hash
  role      Role     @default(OPERATOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  PLANNER
  QC
  WAREHOUSE
  OPERATOR
}

enum Currency {
  IDR
  USD
}

model Customer {
  id        String     @id @default(cuid())
  name      String
  email     String?    @unique
  phone     String?
  preOrders PreOrder[]
  createdAt DateTime   @default(now())
}

model Partner {
  id String @id @default(cuid())
  name String
  phone String?
  address String?
  type String? // mis: CMT, Vendor Branding, dll
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  progresses WorkProgress[]
}

model PreOrder {
  id           String          @id @default(cuid())
  code         String          @unique
  customer     Customer?       @relation(fields: [customerId], references: [id])
  customerId   String?
  channel      PreOrderChannel @default(ONLINE)
  status       PreOrderStatus  @default(DRAFT)
  orderDate    DateTime        @default(now())
  promisedShip DateTime? // janji kirim
  depositAmt   Int? // DP (jika ada) dalam satuan minor (mis. rupiah)
  note         String?
  shipAddress  String? // alamat kirim (plain text singkat). Jika perlu struktur: jadikan JSON string
  shipOption   ShipOption? // opsi kirim
  salesName    String? // nama sales/marketing
  brandingReq  String? // syarat branding khusus
  csNotes      String?
  items        PreOrderItem[]
  payments     PaymentRecord[]
  createdBy    String
  createdAt    DateTime        @default(now())
  WorkOrder    WorkOrder[]
}

model PreOrderItem {
  id           String       @id @default(cuid())
  preOrder     PreOrder     @relation(fields: [preOrderId], references: [id])
  preOrderId   String
  title        String? // nama/model item
  size         String? // ukuran
  color        String? // warna
  material     String? // bahan
  partition    String? // partisi/kompartemen
  accessories  String? // aksesoris
  finishing    String? // finishing
  specsJson    String? // JSON string (opsional) untuk field tambahan
  qtyOrdered   Int
  qtyAllocated Int          @default(0) // sudah dialokasikan ke WO
  qtyFulfilled Int          @default(0) // sudah terkirim
  unitPrice    Int? // optional, untuk laporan
  note         String?
  allocations  Allocation[]
}

model Allocation {
  id             String       @id @default(cuid())
  preOrderItem   PreOrderItem @relation(fields: [preOrderItemId], references: [id])
  preOrderItemId String
  workOrder      WorkOrder    @relation(fields: [workOrderId], references: [id])
  workOrderId    String
  qty            Int
  createdAt      DateTime     @default(now())
}

model PaymentRecord {
  id         String   @id @default(cuid())
  preOrder   PreOrder @relation(fields: [preOrderId], references: [id])
  preOrderId String
  date       DateTime @default(now())
  amount     Int // rupiah minor unit
  method     String? // cash, transfer, e-wallet
  note       String?
}

model Supplier {
  id        String   @id @default(cuid())
  name      String
  code      String   @unique
  phone     String?
  email     String?
  address   String?
  createdAt DateTime @default(now())
}

model Material {
  id         String      @id @default(cuid())
  sku        String      @unique
  name       String
  uom        UoM
  cost       Decimal     @db.Decimal(12, 2)
  minStock   Int         @default(0)
  createdAt  DateTime    @default(now())
  BomItem    BomItem[]
}

model Bom {
  id           String         @id @default(cuid())
  items        BomItem[]
  scrapPct     Float          @default(0) // allowance
}

model BomItem {
  id         String   @id @default(cuid())
  bom        Bom      @relation(fields: [bomId], references: [id])
  bomId      String
  material   Material @relation(fields: [materialId], references: [id])
  materialId String
  qtyPerUnit Float
}

model WorkOrder {
  id           String          @id @default(cuid())
  code         String          @unique
  preOrder     PreOrder?       @relation(fields: [preOrderId], references: [id])
  preOrderId   String? // jadikan unique untuk pola 1 WO : 1 PO (boleh dihapus unique bila multi-WO per PO)
  qtyPlanned   Int
  dueDate      DateTime?
  note         String?
  status       WorkOrderStatus @default(PLANNED)
  allocations  Allocation[]
  createdAt    DateTime        @default(now())
  WorkProgress WorkProgress[]
}

model WorkProgress {
  id          String        @id @default(cuid())
  workOrder   WorkOrder     @relation(fields: [workOrderId], references: [id])
  workOrderId String
  stage       ProgressStage
  category ProgressCategory @default(LINE_IN_HOUSE)
  qty         Int
  note        String?
  recordedBy  String // email/nama admin yang input
  recordedAt  DateTime      @default(now())
  workDate    DateTime // tanggal kerja (boleh backdate)
  // ===== BIAYA =====
  currency Currency @default(IDR)
  unitCost Int? // biaya per unit (wajib jika bukan LINE_IN_HOUSE)
  extraCost Int? // biaya flat tambahan per log (opsional)
  amount Int @default(0) // diset di API = qty*unitCost + extraCost
  // Vendor/partner (opsional; terutama untuk OUT_HOUSE & CMT)
  partner Partner? @relation(fields: [partnerId], references: [id])
  partnerId String?
  // Status pembayaran (sederhana)
  payable Boolean @default(false)
  paidAt DateTime?
  paymentRef String?
  createdAt   DateTime      @default(now())
}

model QCInspection {
  id        String   @id @default(cuid())
  woId      String
  opId      String?
  result    String // PASS/REJECT + catatan
  defects   String? // JSON string list defect
  images    String? // URL[]
  createdAt DateTime @default(now())
}

model AuditLog {
  id        String   @id @default(cuid())
  actorId   String
  action    String
  entity    String
  entityId  String
  data      String?
  createdAt DateTime @default(now())
}

model ProductionEntry {
  id            String      @id @default(cuid())
  date          DateTime // tanggal input (gunakan awal shift)
  shift         String? // contoh: A/B/C atau 1/2/3
  qtyGood       Int         @default(0)
  qtyReject     Int         @default(0)
  defects       String? // JSON list defect preset
  note          String?
  actorId       String // Admin/Planner yang input
  createdAt     DateTime    @default(now())
}
