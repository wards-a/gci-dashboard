// schema.prisma (potongan inti)
@@index([preOrderItemId], map: "idx_alloc_poi")
@@index([workOrderId], map: "idx_alloc_wo")

datasource db {
provider = "postgresql"
url = env("DATABASE_URL")
}


generator client {
provider = "prisma-client-js"
}


enum UoM {
  PCS
  METER
  KG
  ROLL
  PACK
}

enum WoStatus {
  DRAFT
  RELEASED
  IN_PROGRESS
  DONE
  CANCELED
}

enum OpStatus {
  QUEUED
  RUNNING
  PAUSED
  DONE
  REWORK
  SCRAP
}

enum PreOrderStatus {
  DRAFT 
  CONFIRMED 
  PARTIALLY_FULFILLED 
  FULFILLED 
  CANCELED
}

enum PreOrderChannel {
  ONLINE
  OFFLINE
  MARKETPLACE
  OTHER
}

enum ShipOption {
  PICKUP
  COURIER
  JNE
  JNT
  SICEPAT
  GOJEK
  GRAB
  POS
  LALAMOVE
  BARAKA
  OTHER
}

model User {
  id String @id @default(cuid())
  email String @unique
  name String?
  password String // hash
  role Role @default(OPERATOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  PLANNER
  QC
  WAREHOUSE
  OPERATOR
}

model Customer {
  id String @id @default(cuid())
  name String
  email String? @unique
  phone String?
  preOrders PreOrder[]
  createdAt DateTime @default(now())
}

model PreOrder {
  id String @id @default(cuid())
  code String @unique
  customer Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  channel PreOrderChannel @default(ONLINE)
  status PreOrderStatus @default(DRAFT)
  orderDate DateTime @default(now())
  promisedShip DateTime? // janji kirim
  depositAmt Int? // DP (jika ada) dalam satuan minor (mis. rupiah)
  note String?
  shipAddress String? // alamat kirim (plain text singkat). Jika perlu struktur: jadikan JSON string
  shipOption ShipOption? // opsi kirim
  salesName String? // nama sales/marketing
  brandingReq String? // syarat branding khusus
  csNotes String?
  items PreOrderItem[]
  payments PaymentRecord[]
  createdBy String
  createdAt DateTime @default(now())
}

model PreOrderItem {
  id String @id @default(cuid())
  preOrder PreOrder @relation(fields: [preOrderId], references: [id])
  preOrderId String
  title String? // nama/model item
  size String? // ukuran
  color String? // warna
  material String? // bahan
  partition String? // partisi/kompartemen
  accessories String? // aksesoris
  finishing String? // finishing
  specsJson String? // JSON string (opsional) untuk field tambahan
  qtyOrdered Int
  qtyAllocated Int @default(0) // sudah dialokasikan ke WO
  qtyFulfilled Int @default(0) // sudah terkirim
  unitPrice Int? // optional, untuk laporan
  note String?
  allocations Allocation[]
}

model Allocation {
  id String @id @default(cuid())
  preOrderItem PreOrderItem @relation(fields: [preOrderItemId], references: [id])
  preOrderItemId String
  workOrder WorkOrder @relation(fields: [workOrderId], references: [id])
  workOrderId String
  qty Int
  createdAt DateTime @default(now())
}


model PaymentRecord {
  id String @id @default(cuid())
  preOrder PreOrder @relation(fields: [preOrderId], references: [id])
  preOrderId String
  date DateTime @default(now())
  amount Int // rupiah minor unit
  method String? // cash, transfer, e-wallet
  note String?
}

model Supplier {
  id String @id @default(cuid())
  name String
  code String @unique
  phone String?
  email String?
  address String?
  createdAt DateTime @default(now())
}

model Material {
  id String @id @default(cuid())
  sku String @unique
  name String
  uom UoM
  cost Decimal @db.Decimal(12,2)
  minStock Int @default(0)
  createdAt DateTime @default(now())
  bomItems BomItem[]
  stockMoves StockMove[]
}

model Product {
  id String @id @default(cuid())
  code String @unique
  name String
  variants ProductVariant[]
}


model ProductVariant {
  id String @id @default(cuid())
  product Product @relation(fields: [productId], references: [id])
  productId String
  color String?
  size String?
  bom Bom?
  uniqueCode String @unique // misal: PRT-001-RED-S
  workOrders WorkOrder[]
}


model Bom {
  id String @id @default(cuid())
  productVar ProductVariant @relation(fields: [productVarId], references: [id])
  productVarId String @unique
  items BomItem[]
  scrapPct Float @default(0) // allowance
}

model BomItem {
  id String @id @default(cuid())
  bom Bom @relation(fields: [bomId], references: [id])
  bomId String
  material Material @relation(fields: [materialId], references: [id])
  materialId String
  qtyPerUnit Float
}


model WorkCenter {
  id String @id @default(cuid())
  code String @unique
  name String
  operations Operation[]
}


model Operation {
  id String @id @default(cuid())
  name String
  workCenter WorkCenter @relation(fields: [workCenterId], references: [id])
  workCenterId String
  stdTimeMin Float // waktu standar per unit (menit)
  woOperations WoOperation[]
}

model WorkOrder {
  id String @id @default(cuid())
  code String @unique
  productVar ProductVariant @relation(fields: [productVarId], references: [id])
  productVarId String
  qtyPlanned Int
  dueDate DateTime?
  status WoStatus @default(DRAFT)
  operations WoOperation[]
  createdBy String
  createdAt DateTime @default(now())
  allocations Allocation[]
}


model WoOperation {
  id String @id @default(cuid())
  wo WorkOrder @relation(fields: [woId], references: [id])
  woId String
  operation Operation @relation(fields: [operationId], references: [id])
  operationId String
  qtyGood Int @default(0)
  qtyReject Int @default(0)
  seq Int
  status OpStatus @default(QUEUED)
  startedAt DateTime?
  finishedAt DateTime?
  operatorId String?
  productionEntries ProductionEntry[]
}

model Location {
  id String @id @default(cuid())
  code String @unique
  name String
  fromLocs StockMove[] @relation("fromLoc")
  toLocs StockMove[] @relation("toLoc")
}


model StockMove {
  id String @id @default(cuid())
  material Material @relation(fields: [materialId], references: [id])
  materialId String
  fromLoc Location? @relation("fromLoc", fields: [fromLocId], references: [id])
  fromLocId String?
  toLoc Location? @relation("toLoc", fields: [toLocId], references: [id])
  toLocId String?
  qty Float
  createdAt DateTime @default(now())
  ref String?
}


model QCInspection {
  id String @id @default(cuid())
  woId String
  opId String?
  result String // PASS/REJECT + catatan
  defects String? // JSON string list defect
  images String? // URL[]
  createdAt DateTime @default(now())
}

model AuditLog {
  id String @id @default(cuid())
  actorId String
  action String
  entity String
  entityId String
  data String?
  createdAt DateTime @default(now())
}

model ProductionEntry {
  id String @id @default(cuid())
  woOperation WoOperation @relation(fields: [woOperationId], references: [id])
  woOperationId String
  date DateTime // tanggal input (gunakan awal shift)
  shift String? // contoh: A/B/C atau 1/2/3
  qtyGood Int @default(0)
  qtyReject Int @default(0)
  defects String? // JSON list defect preset
  note String?
  actorId String // Admin/Planner yang input
  createdAt DateTime @default(now())
}